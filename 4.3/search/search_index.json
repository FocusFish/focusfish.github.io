{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"UVMS documentation","text":""},{"location":"installation/","title":"Installation","text":"<p>There are two ways to install UVMS; Manually or through Docker. UVMS has only ever been deployed in production running directly on a host, thus the Docker way is considered experimental and is not recommended for production use as of yet.</p>"},{"location":"installation/docker/","title":"Docker","text":"<p>Warning</p> <p>The Docker based setup is not recommended for production use</p> <p>There are two ways to test a Docker based setup; docker-compose and Maven fabric8 Docker plugin. The latter is intended for development usage, but can be an option if there's a strong preference for building the images from scratch.</p> <p>After installation the following will be running. (Volumes are not strictly necessary, see Ephemeral tip)</p> <pre><code>architecture-beta\n    group host(server)[Host]\n    group docker(cloud)[Docker] in host\n\n    group wf(cloud)[Wildfly container] in docker\n    service wildfly(server)[Wildfly] in wf\n\n    group postgres(cloud)[PostgreSQL container] in docker\n    service db(database)[Database] in postgres\n\n    db:L -- R:wildfly\n    service disk2(disk)[Volume] in host\n    disk2:T -- B:wildfly\n    service disk1(disk)[Volume] in host\n    disk1:T -- B:db</code></pre> <p>With the exception of JMS for the <code>docker-compose</code> option, the following table of port mappings apply:</p> Service What Port (host:container) Wildfly Management GUI 29990:9990 HTTP 28080:8080 HTTPS 28443:8443 JMS 5445:5445 JMS 5455:5455 PostgreSQL 25432:5432"},{"location":"installation/docker/#docker-compose","title":"Docker-compose","text":"<p>Prerequisites</p> <ul> <li>Docker installed</li> <li>docker-compose installed</li> </ul>"},{"location":"installation/docker/#install","title":"Install","text":"Ephemeral mode <p>To run in an \"ephemeral\" mode the <code>volumes</code> part in <code>docker-compose-4.3.2.yml</code> can be removed.</p> <pre><code>11,13d10\n&lt;     volumes:\n&lt;       - /app/logs:/app/logs\n&lt;       - /opt/jboss/wildfly/standalone/log:/opt/jboss/wildfly/standalone/log\n</code></pre> Download and start UVMS stack through docker-compose<pre><code>wget https://repo1.maven.org/maven2/fish/focus/uvms/docker/docker-compose/4.3.2/docker-compose-4.3.2.yml\ndocker-compose -f ./docker-compose-4.3.2.yml up -d # (1)\n</code></pre> <ol> <li><code>-f</code> flag points to the yaml file downloaded in the step above. <code>-d</code> for    detach mode, i.e. the containers will continue running in the background.</li> </ol> <p>Wait for the Docker images to be downloaded and the containers then to start up and finally for Wildfly to load and start all of the UVMS modules.</p> <ol> <li> <p>Run     <pre><code>docker-compose -f ./docker-compose-4.3.2.yml logs -f\n</code></pre></p> <p>Look for something similar to <code>WildFly Full 26.0.0.Final (WildFly Core 18.0.0.Final) started in 12345ms</code> in the logs</p> </li> <li> <p>Access the GUI at http://localhost:28080,    credentials: <code>vms_admin_com</code>/<code>password</code></p> </li> </ol> <p>Warning</p> <p>Using <code>docker-compose up</code> always starts the system from a clean slate. This means that any data in the database is lost if the command is used after the first start.</p> <p>Use <code>docker-compose stop</code> and <code>docker-compose start</code> to stop and start an already running system</p>"},{"location":"installation/docker/#stop-and-clean-up","title":"Stop and clean up","text":"<p>Once done the UVMS stack can be cleaned up with:</p> Clean up UVMS stack<pre><code>docker-compose -f ./docker-compose-4.3.2.yml down --volumes # (1)\n</code></pre> <ol> <li>By default, named volumes in your compose file are not removed when you run    <code>docker-compose down</code>. If you want to remove the volumes, you need to add the    <code>--volumes</code> flag.</li> </ol>"},{"location":"installation/docker/#build-uvms-images-from-the-umvs-docker-repo","title":"Build UVMS images from the UMVS-Docker repo","text":"<p>Prerequisites</p> <ul> <li>Docker installed</li> <li>Java 11</li> <li>Maven</li> </ul>"},{"location":"installation/docker/#install_1","title":"Install","text":"<ol> <li><code>git</code> clone repo: UVMS-Docker</li> <li>Then run     Build all Docker images and start an empty UVMS instance<pre><code>cd UVMS-Docker \\\n&amp;&amp; mvn clean install -Pdocker -DskipITs \\\n&amp;&amp; cd unionvms-test \\\n&amp;&amp; mvn docker:start \\\n&amp;&amp; cd ..\n</code></pre></li> <li>With a <code>BUILD SUCCESS</code> from the above step the Docker containers should now    be up and running. Verify with: <code>docker ps</code></li> <li>Access the GUI at http://localhost:28080,    credentials: <code>vms_admin_com</code>/<code>password</code></li> </ol>"},{"location":"installation/docker/#stop-and-clean-up_1","title":"Stop and clean up","text":"Stop Docker containers and clean up<pre><code>docker stop postgres-release-1 wildfly-unionvms-1 \\\n&amp;&amp; docker system prune -f --volumes\n</code></pre>"},{"location":"installation/manual/","title":"Manual installation","text":"<p>It is recommended to run PostgreSQL and Wildfly on different machines. This how-to is for a simple setup with one PostgreSQL server and one Wildfly server. It does not cover more advanced use cases such as backups, replication, geo-redundancy, general maintenance, etc.</p> <p>Prerequisites</p> <ul> <li>Two machines (VM or bare metal) with ssh access and sudo privileges</li> <li>Connectivity between the machines for Wildfly &lt;-&gt; PostgreSQL (5432)</li> </ul> <p>After installation the following will be running. Note that storage might be better served through a SAN instead.</p> <pre><code>architecture-beta\n    group wf(server)[Wildfly host]\n    service wildfly(server)[Wildfly] in wf\n    service disk2(disk)[Storage] in wf\n    disk2:T -- B:wildfly\n\n    group postgres(server)[PostgreSQL host]\n    service db(database)[Database] in postgres\n    service disk1(disk)[Storage] in postgres\n    disk1:T -- B:db\n\n    db:L -- R:wildfly</code></pre>"},{"location":"installation/manual/#postgresql-server","title":"PostgreSQL server","text":"<p>Versions:</p> <ul> <li><code>PostgreSQL 12</code></li> <li><code>Postgis 2.5.3</code></li> </ul> Install PostgreSQL with extensions<pre><code>sudo zypper in postgresql-devel\nsudo zypper in gcc\nsudo zypper in gcc-c++\nsudo zypper in autoconf\nsudo zypper in automake\nsudo zypper in libtool\nsudo zypper in libxml2-devel\n\n# Proj4:\nsudo zypper install sqlite3\nsudo zypper in sqlite3-devel\nsudo wget https://download.osgeo.org/proj/proj-6.2.0.tar.gz\nsudo tar -xvzf proj-6.2.0.tar.gz\ncd proj-6.2.0/\nsudo ./configure\nsudo make\nsudo make check\nsudo make install\n\n# GEOS:\nsudo wget https://git.osgeo.org/gitea/geos/geos/archive/3.7.3.tar.gz\nsudo tar -xvzf 3.7.3.tar.gz\ncd geos\nsudo ./autogen.sh\nsudo ./configure\nsudo make\nsudo make check\nsudo make install\n\n# GDAL:\nsudo wget http://download.osgeo.org/gdal/2.4.2/gdal-2.4.2.tar.gz\nsudo tar -xvzf gdal-2.4.2.tar.gz\ncd gdal-2.4.2\nsudo ./autogen.sh\nsudo ./configure\nsudo make\nsudo make install\n\n# sudo /sbin/ldconfig\n\n# PostGIS:\nsudo wget https://download.osgeo.org/postgis/source/postgis-2.5.3.tar.gz\nsudo tar -xvzf postgis-2.5.3.tar.gz\nsudo ./configure --with-geosconfig=/usr/local/bin/geos-config --with-gdalconfig=/usr/local/bin/gdal-config\nsudo make\nsudo make install\n\nsudo /sbin/ldconfig\n</code></pre> <p>With an empty PostgreSQL it's now time to add a new database and the needed schemas and users.</p> <ol> <li>Download setup.sql</li> <li>Change <code>db71u</code> to a name of your choosing. Make sure to replace all of the occurrences</li> <li>Change all passwords for the tables (<code>WITH PASSWORD 'XYZ'</code>)</li> <li>Run the SQL script (with <code>psql</code> or a GUI such as <code>pgadmin</code>, <code>dbeaver</code>, etc).</li> </ol>"},{"location":"installation/manual/#wildfly-server","title":"Wildfly server","text":""},{"location":"installation/manual/#basic-server-setup","title":"Basic server setup","text":"<p>UVMS requires Java 11 and has not been tested on newer versions.</p> <p>On a SLES setup run:</p> <pre><code># Install Java 11\nsudo zypper install java-11-openjdk-devel\n\n# Add a wildfly user\nsudo /usr/sbin/groupadd -r wildfly\nsudo /usr/sbin/useradd -r -g wildfly -d /opt/wildfly -s /sbin/nologin wildfly\n\n# Create folder structure\nsudo mkdir -p /opt/wildfly\nsudo chown -R wildfly:users /opt/wildfly\nsudo mkdir -p /opt/uvms/app/logs\nsudo chown -R wildfly:users /opt/uvms\nsudo ln -s /opt/uvms/app /app\n\n# Open firewall\nsudo firewall-cmd --zone=public --add-port=28080/tcp --permanent\nsudo firewall-cmd --zone=public --add-port=5445/tcp --permanent\nsudo firewall-cmd --zone=public --add-port=8443/tcp --permanent\nsudo firewall-cmd --zone=public --add-port=9990/tcp --permanent\nsudo firewall-cmd --reload\n\n# 28080 - wildfly http\n# 5445 - jms / activemq\n# 8443 - wildfly https\n# 9990 - wildfly mgmt console\n\n# Verify with\nsudo firewall-cmd --list-all\n</code></pre>"},{"location":"installation/manual/#wildfly-setup","title":"Wildfly setup","text":"<p>Add default configuration and a <code>systemd</code> service for Wildfly.</p> Add wildfly conf<pre><code>sudo tee -a /etc/default/wildfly.conf &lt;&lt; 'EOF'\n# The configuration you want to run\nWILDFLY_CONFIG=standalone-full.xml\n\n# The mode you want to run\nWILDFLY_MODE=standalone\n\n# The address to bind to\nWILDFLY_BIND=0.0.0.0\nEOF\n</code></pre> Add launch script<pre><code>sudo -u wildfly tee -a /opt/wildfly/launch.sh &lt;&lt; 'EOF'\n#!/bin/sh\nif [ \"x$WILDFLY_HOME\" = \"x\" ]; then\n    WILDFLY_HOME=\"/opt/wildfly/current\"\nfi\n\nif [[ \"$1\" == \"domain\" ]]; then\n    $WILDFLY_HOME/bin/domain.sh -c $2 -b $3 -bmanagement $3\nelse\n    $WILDFLY_HOME/bin/standalone.sh -c $2 -b $3 -bmanagement $3\nfi\nEOF\n</code></pre> Make it executable<pre><code>sudo chmod +x /opt/wildfly/launch.sh\n</code></pre> Add systemd service for wildfly<pre><code>sudo tee -a /etc/systemd/system/wildfly.service &lt;&lt; 'EOF'\n[Unit]\nDescription=The WildFly Application Server\nAfter=syslog.target network.target\n\n[Service]\nEnvironment=LAUNCH_JBOSS_IN_BACKGROUND=1\nEnvironmentFile=-/etc/default/wildfly.conf\nUser=wildfly\nLimitNOFILE=102642\nPIDFile=/var/run/wildfly/wildfly.pid\nExecStart=/opt/wildfly/launch.sh $WILDFLY_MODE $WILDFLY_CONFIG $WILDFLY_BIND\nStandardOutput=null\n\n[Install]\nWantedBy=multi-user.target\nEOF\n</code></pre> Enable the service<pre><code>sudo systemctl enable wildfly\nsudo systemctl daemon-reload\n</code></pre>"},{"location":"installation/manual/#install-uvms-components","title":"Install UVMS components","text":"<p>Prerequisites</p> <ul> <li>Basic server setup completed</li> <li>Wildfly setup completed</li> <li>SSH user with <code>sudo</code> privileges (not the <code>wildfly</code> user as it should not   have <code>sudo</code> nor login privileges)</li> </ul>"},{"location":"installation/manual/#files","title":"Files","text":"<p>The following <code>pom.xml</code> utilizes SSH and SCP through the maven-antrun-plugin for maven to move artifacts and run commands on a target host.</p> <p>Copy the contents of the three files <code>pom.xml</code>, <code>assembly.xml</code>, and <code>uvms.properties</code> into a folder structure like the following:</p> Folder structure<pre><code>.\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 main\n\u2502       \u251c\u2500\u2500 assembly\n\u2502       \u2502   \u2514\u2500\u2500 assembly.xml\n\u2502       \u2514\u2500\u2500 wf-scripts\n\u2502           \u2514\u2500\u2500 uvms.properties\n\u2514\u2500\u2500 pom.xml\n</code></pre> <p>Warning</p> <p>The <code>pom.xml</code> file contains a number of properties that needs setting (look for <code>SET_ME</code>). Some of them are set in the next section through environment variables, and is labeled as <code>OPTIONAL_SET_ME</code> instead. For example <code>scp.target.server.hostname</code> is one that is mandatory to set in <code>pom.xml</code>.</p> pom.xml<pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n                      http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;se.havochvatten.unionvms&lt;/groupId&gt;\n    &lt;artifactId&gt;wildfly-dist&lt;/artifactId&gt;\n    &lt;version&gt;${unionvms.docker.version}&lt;/version&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n\n    &lt;properties&gt;\n        &lt;unionvms.wildfly.version&gt;26.0.0.Final&lt;/unionvms.wildfly.version&gt;\n        &lt;unionvms.docker.version&gt;4.3.2&lt;/unionvms.docker.version&gt;\n        &lt;unionvms.activemq-rar.version&gt;5.16.3&lt;/unionvms.activemq-rar.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.wildfly&lt;/groupId&gt;\n            &lt;artifactId&gt;wildfly-dist&lt;/artifactId&gt;\n            &lt;version&gt;${unionvms.wildfly.version}&lt;/version&gt;\n            &lt;type&gt;zip&lt;/type&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;fish.focus.uvms.docker&lt;/groupId&gt;\n            &lt;artifactId&gt;uvms-docker-postgres-release&lt;/artifactId&gt;\n            &lt;version&gt;${unionvms.docker.version}&lt;/version&gt;\n            &lt;type&gt;zip&lt;/type&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;com.oracle&lt;/groupId&gt;\n                    &lt;artifactId&gt;ojdbc6&lt;/artifactId&gt;\n                &lt;/exclusion&gt;\n            &lt;/exclusions&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;fish.focus.uvms.docker&lt;/groupId&gt;\n            &lt;artifactId&gt;uvms-docker-wildfly-base&lt;/artifactId&gt;\n            &lt;version&gt;${unionvms.docker.version}&lt;/version&gt;\n            &lt;type&gt;zip&lt;/type&gt;\n            &lt;exclusions&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;org.hibernate&lt;/groupId&gt;\n                    &lt;artifactId&gt;hibernate-spatial&lt;/artifactId&gt;\n                &lt;/exclusion&gt;\n                &lt;exclusion&gt;\n                    &lt;groupId&gt;org.postgis&lt;/groupId&gt;\n                    &lt;artifactId&gt;postgis-jdbc&lt;/artifactId&gt;\n                &lt;/exclusion&gt;\n            &lt;/exclusions&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;fish.focus.uvms.docker&lt;/groupId&gt;\n            &lt;artifactId&gt;uvms-docker-wildfly-unionvms&lt;/artifactId&gt;\n            &lt;version&gt;${unionvms.docker.version}&lt;/version&gt;\n            &lt;type&gt;zip&lt;/type&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n    &lt;build&gt;\n        &lt;pluginManagement&gt;\n            &lt;plugins&gt;\n                &lt;plugin&gt;\n                    &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;\n                    &lt;version&gt;1.8&lt;/version&gt;\n                    &lt;dependencies&gt;\n                        &lt;dependency&gt;\n                            &lt;groupId&gt;org.apache.ant&lt;/groupId&gt;\n                            &lt;artifactId&gt;ant-jsch&lt;/artifactId&gt;\n                            &lt;version&gt;1.10.1&lt;/version&gt;\n                        &lt;/dependency&gt;\n                        &lt;dependency&gt;\n                            &lt;groupId&gt;com.jcraft&lt;/groupId&gt;\n                            &lt;artifactId&gt;jsch&lt;/artifactId&gt;\n                            &lt;version&gt;0.1.54&lt;/version&gt;\n                        &lt;/dependency&gt;\n                        &lt;dependency&gt;\n                            &lt;groupId&gt;ant-contrib&lt;/groupId&gt;\n                            &lt;artifactId&gt;ant-contrib&lt;/artifactId&gt;\n                            &lt;version&gt;1.0b3&lt;/version&gt;\n                            &lt;exclusions&gt;\n                                &lt;exclusion&gt;\n                                    &lt;groupId&gt;ant&lt;/groupId&gt;\n                                    &lt;artifactId&gt;ant&lt;/artifactId&gt;\n                                &lt;/exclusion&gt;\n                            &lt;/exclusions&gt;\n                        &lt;/dependency&gt;\n                    &lt;/dependencies&gt;\n                &lt;/plugin&gt;\n                &lt;plugin&gt;\n                    &lt;groupId&gt;org.liquibase&lt;/groupId&gt;\n                    &lt;artifactId&gt;liquibase-maven-plugin&lt;/artifactId&gt;\n                    &lt;version&gt;3.7.0&lt;/version&gt;\n                    &lt;configuration&gt;\n                        &lt;url&gt;jdbc:postgresql://${unionvms.database.host}:5432/${unionvms.database.name}&lt;/url&gt;\n                        &lt;tag&gt;${unionvms.docker.version}&lt;/tag&gt;\n                        &lt;promptOnNonLocalDatabase&gt;false&lt;/promptOnNonLocalDatabase&gt;\n                    &lt;/configuration&gt;\n                    &lt;dependencies&gt;\n                        &lt;dependency&gt;\n                            &lt;groupId&gt;org.postgresql&lt;/groupId&gt;\n                            &lt;artifactId&gt;postgresql&lt;/artifactId&gt;\n                            &lt;version&gt;42.2.5&lt;/version&gt;\n                        &lt;/dependency&gt;\n                    &lt;/dependencies&gt;\n                &lt;/plugin&gt;\n            &lt;/plugins&gt;\n        &lt;/pluginManagement&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.0.1&lt;/version&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;unpack-dependencies&lt;/id&gt;\n                        &lt;phase&gt;generate-resources&lt;/phase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;unpack-dependencies&lt;/goal&gt;\n                        &lt;/goals&gt;\n                        &lt;configuration&gt;\n                            &lt;copyPom&gt;false&lt;/copyPom&gt;\n                            &lt;outputDirectory&gt;${project.basedir}/target/content&lt;/outputDirectory&gt;\n                            &lt;excludeTypes&gt;pom&lt;/excludeTypes&gt;\n                            &lt;prependGroupId&gt;false&lt;/prependGroupId&gt;\n                            &lt;excludeTransitive&gt;true&lt;/excludeTransitive&gt;\n                        &lt;/configuration&gt;\n                    &lt;/execution&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;copy-ears&lt;/id&gt;\n                        &lt;phase&gt;generate-resources&lt;/phase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;copy&lt;/goal&gt;\n                        &lt;/goals&gt;\n                        &lt;configuration&gt;\n                            &lt;artifactItems&gt;\n                                &lt;artifactItem&gt;\n                                    &lt;groupId&gt;org.apache.activemq&lt;/groupId&gt;\n                                    &lt;artifactId&gt;activemq-rar&lt;/artifactId&gt;\n                                    &lt;type&gt;rar&lt;/type&gt;\n                                    &lt;version&gt;${unionvms.activemq-rar.version}&lt;/version&gt;\n                                    &lt;overWrite&gt;false&lt;/overWrite&gt;\n                                    &lt;outputDirectory&gt;${project.build.directory}/addons/&lt;/outputDirectory&gt;\n                                &lt;/artifactItem&gt;\n                            &lt;/artifactItems&gt;\n                            &lt;overWriteReleases&gt;false&lt;/overWriteReleases&gt;\n                            &lt;overWriteSnapshots&gt;true&lt;/overWriteSnapshots&gt;\n                        &lt;/configuration&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n            &lt;plugin&gt;\n                &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;id&gt;unpack-liquibase&lt;/id&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;run&lt;/goal&gt;\n                        &lt;/goals&gt;\n                        &lt;phase&gt;generate-resources&lt;/phase&gt;\n                        &lt;configuration&gt;\n                            &lt;tasks&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.asset.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/asset\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.audit.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/audit\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.config.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/config\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.exchange.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/exchange\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.movement-rules.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/movement-rules\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.movement.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/movement\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.reporting.reporting-liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/reporting\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.spatial.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/spatial\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.user.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/user\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.incident.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/incident\"/&gt;\n                                &lt;unzip src=\"${project.build.directory}/content/uvms-docker-postgres-release/liquibase/fish.focus.uvms.activity.liquibase.zip\"\n                                       dest=\"${project.build.directory}/liquibase/activity\"/&gt;\n                            &lt;/tasks&gt;\n                        &lt;/configuration&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n            &lt;plugin&gt;\n                &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n                &lt;version&gt;3.7.1&lt;/version&gt;\n                &lt;configuration&gt;\n                    &lt;descriptors&gt;\n                        &lt;descriptor&gt;src/main/assembly/assembly.xml&lt;/descriptor&gt;\n                    &lt;/descriptors&gt;\n                    &lt;finalName&gt;${project.artifactId}-${project.version}&lt;/finalName&gt;\n                    &lt;appendAssemblyId&gt;false&lt;/appendAssemblyId&gt;\n                &lt;/configuration&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;phase&gt;package&lt;/phase&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;single&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n                &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;\n                &lt;version&gt;2.8.2&lt;/version&gt;\n                &lt;goals&gt;\n                    &lt;goal&gt;deploy-file&lt;/goal&gt;\n                &lt;/goals&gt;\n                &lt;configuration&gt;\n                    &lt;packaging&gt;zip&lt;/packaging&gt;\n                    &lt;generatePom&gt;true&lt;/generatePom&gt;\n                    &lt;artifactId&gt;${project.artifactId}&lt;/artifactId&gt;\n                    &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;\n                    &lt;version&gt;${project.version}&lt;/version&gt;\n                    &lt;file&gt;target/${project.artifactId}-${project.version}.zip&lt;/file&gt;\n                &lt;/configuration&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n    &lt;profiles&gt;\n        &lt;profile&gt;\n            &lt;id&gt;scp-stop-and-install-server&lt;/id&gt;\n            &lt;build&gt;\n                &lt;plugins&gt;\n                    &lt;plugin&gt;\n                        &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;\n                        &lt;executions&gt;\n                            &lt;execution&gt;\n                                &lt;id&gt;stop-scp&lt;/id&gt;\n                                &lt;phase&gt;verify&lt;/phase&gt;\n                                &lt;configuration&gt;\n                                    &lt;target&gt;\n                                        &lt;taskdef resource=\"net/sf/antcontrib/antcontrib.properties\"\n                                                 classpathref=\"maven.plugin.classpath\"/&gt;\n                                        &lt;!-- 1. stop wildfly if any--&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 failonerror=\"false\" command=\"sudo systemctl stop wildfly.service\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 failonerror=\"false\"\n                                                 command=\"sudo -u wildfly rm ${unionvms.symlink.wildfly}\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 failonerror=\"false\"\n                                                 command=\"sudo -u wildfly rm -rf ${unionvms.install.path}/${project.artifactId}*\"/&gt;\n\n                                        &lt;scp file=\"target/${project.artifactId}-${project.version}.zip\"\n                                             todir=\"${scp.target.server.username}:${scp.target.server.password}@${scp.target.server.hostname}:/tmp\"\n                                             trust=\"true\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly unzip /tmp/${project.artifactId}-${project.version}.zip -d ${unionvms.install.path}\"/&gt;\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo rm /tmp/${project.artifactId}-${project.version}.zip\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly chmod a+x ${unionvms.install.path}/${project.artifactId}-${project.version}/unionvms-database-scripts/*.sh\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly sed s/db71u/${unionvms.database.name}/g &amp;lt; ${unionvms.install.path}/${project.artifactId}-${project.version}/unionvms-database-scripts/.pgpass &amp;gt; ~/.pgpass; chmod 600 ~/.pgpass\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly sed -i -r s/-Xmx[0-9]\\{4\\}m/-Xmx12288m/g ${unionvms.install.path}/${project.artifactId}-${project.version}/bin/standalone.conf\"/&gt;\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly sed -i -r s/-XX:MetaspaceSize=[0-9]\\{1,4\\}[Mm]/-XX:MetaspaceSize=256m/g ${unionvms.install.path}/${project.artifactId}-${project.version}/bin/standalone.conf\"/&gt;\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly sed -i -r s/-XX:MaxMetaspaceSize=[0-9]\\{1,4\\}[Mm]/-XX:MaxMetaspaceSize=2048m/g ${unionvms.install.path}/${project.artifactId}-${project.version}/bin/standalone.conf\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly ln -s ${unionvms.install.path}/${project.artifactId}-${project.version} ${unionvms.symlink.wildfly}\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly ${unionvms.symlink.wildfly}/bin/add-user.sh -u '${wildfly.mgmt.console.username}' -p '${wildfly.mgmt.console.password}'\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly ${unionvms.symlink.wildfly}/bin/jboss-cli.sh --file=${unionvms.symlink.wildfly}/cli-scripts/uvms_configuration.cli --properties=${unionvms.symlink.wildfly}/cli-scripts/uvms.properties\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly ${unionvms.symlink.wildfly}/bin/jboss-cli.sh --file=${unionvms.symlink.wildfly}/cli-scripts/uvms_datasources.cli --properties=${unionvms.symlink.wildfly}/cli-scripts/uvms.properties\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo -u wildfly ${unionvms.symlink.wildfly}/bin/jboss-cli.sh --file=${unionvms.symlink.wildfly}/cli-scripts/uvms_messaging.cli --properties=${unionvms.symlink.wildfly}/cli-scripts/uvms.properties\"/&gt;\n\n                                    &lt;/target&gt;\n                                &lt;/configuration&gt;\n                                &lt;goals&gt;\n                                    &lt;goal&gt;run&lt;/goal&gt;\n                                &lt;/goals&gt;\n                            &lt;/execution&gt;\n                        &lt;/executions&gt;\n                    &lt;/plugin&gt;\n                &lt;/plugins&gt;\n            &lt;/build&gt;\n        &lt;/profile&gt;\n        &lt;profile&gt;\n            &lt;id&gt;scp-start-server&lt;/id&gt;\n            &lt;build&gt;\n                &lt;plugins&gt;\n                    &lt;plugin&gt;\n                        &lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;\n                        &lt;executions&gt;\n                            &lt;execution&gt;\n                                &lt;id&gt;scp-start&lt;/id&gt;\n                                &lt;phase&gt;verify&lt;/phase&gt;\n                                &lt;configuration&gt;\n                                    &lt;target&gt;\n                                        &lt;taskdef resource=\"net/sf/antcontrib/antcontrib.properties\"\n                                                 classpathref=\"maven.plugin.classpath\"/&gt;\n\n                                        &lt;sshexec host=\"${scp.target.server.hostname}\"\n                                                 username=\"${scp.target.server.username}\"\n                                                 password=\"${scp.target.server.password}\" trust=\"true\"\n                                                 command=\"sudo systemctl start wildfly.service\"/&gt;\n                                    &lt;/target&gt;\n                                &lt;/configuration&gt;\n                                &lt;goals&gt;\n                                    &lt;goal&gt;run&lt;/goal&gt;\n                                &lt;/goals&gt;\n                            &lt;/execution&gt;\n                        &lt;/executions&gt;\n                    &lt;/plugin&gt;\n                &lt;/plugins&gt;\n            &lt;/build&gt;\n        &lt;/profile&gt;\n        &lt;profile&gt;\n            &lt;id&gt;prod-server&lt;/id&gt;\n            &lt;properties&gt;\n                &lt;scp.target.server.hostname&gt;SET_ME&lt;/scp.target.server.hostname&gt;\n                &lt;scp.target.server.username&gt;OPTIONAL_SET_ME&lt;/scp.target.server.username&gt;\n                &lt;scp.target.server.password&gt;OPTIONAL_SET_ME&lt;/scp.target.server.password&gt;\n\n                &lt;unionvms.install.path&gt;/opt/wildfly&lt;/unionvms.install.path&gt;\n                &lt;unionvms.symlink.wildfly&gt;/opt/wildfly/current&lt;/unionvms.symlink.wildfly&gt;\n\n                &lt;unionvms.database.name&gt;SET_ME&lt;/unionvms.database.name&gt;\n                &lt;unionvms.database.host&gt;SET_ME&lt;/unionvms.database.host&gt;\n\n                &lt;unionvms.database.username&gt;OPTIONAL_SET_ME&lt;/unionvms.database.username&gt;\n                &lt;unionvms.database.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.password&gt;\n\n                &lt;unionvms.database.asset.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.asset.password&gt;\n                &lt;unionvms.database.audit.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.audit.password&gt;\n                &lt;unionvms.database.config.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.config.password&gt;\n                &lt;unionvms.database.movement.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.movement.password&gt;\n                &lt;unionvms.database.movement.rules.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.movement.rules.password&gt;\n                &lt;unionvms.database.exchange.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.exchange.password&gt;\n                &lt;unionvms.database.reporting.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.reporting.password&gt;\n                &lt;unionvms.database.spatial.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.spatial.password&gt;\n                &lt;unionvms.database.usm.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.usm.password&gt;\n                &lt;unionvms.database.incident.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.incident.password&gt;\n                &lt;unionvms.database.activity.password&gt;OPTIONAL_SET_ME&lt;/unionvms.database.activity.password&gt;\n\n                &lt;wildfly.mgmt.console.username&gt;admin&lt;/wildfly.mgmt.console.username&gt;\n                &lt;wildfly.mgmt.console.password&gt;OPTIONAL_SET_ME&lt;/wildfly.mgmt.console.password&gt;\n\n                &lt;unionvms.usm.secret.key&gt;OPTIONAL_SET_ME&lt;/unionvms.usm.secret.key&gt;\n            &lt;/properties&gt;\n        &lt;/profile&gt;\n    &lt;/profiles&gt;\n&lt;/project&gt;\n</code></pre> assembly.xml<pre><code>&lt;assembly&gt;\n    &lt;id&gt;unionvmswildflydist&lt;/id&gt;\n    &lt;formats&gt;\n        &lt;format&gt;zip&lt;/format&gt;\n    &lt;/formats&gt;\n    &lt;fileSets&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/wildfly-${unionvms.wildfly.version}/&lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;**/*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;excludes&gt;\n                &lt;exclude&gt;modules/system/layers/base/org/hibernate/main/*.xml\n                &lt;/exclude&gt;\n                &lt;exclude&gt;modules/system/layers/base/org/apache/activemq/artemis/**/*.xml&lt;/exclude&gt;\n                &lt;exclude&gt;modules/system/layers/base/org/apache/activemq/artemis/**/artemis-*.jar&lt;/exclude&gt;\n                &lt;exclude&gt;modules/org/postgresql/main/**/*.*&lt;/exclude&gt;\n                &lt;exclude&gt;bin/standalone.conf&lt;/exclude&gt;\n            &lt;/excludes&gt;\n            &lt;outputDirectory&gt;&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/wildfly-${unionvms.wildfly.version}/&lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;**/logging.properties&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-wildfly-base/&lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;*.properties&lt;/include&gt;\n                &lt;include&gt;server.keystore&lt;/include&gt;\n                &lt;include&gt;client.truststore&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;standalone/configuration&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-wildfly-base/&lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;standalone.conf&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;bin&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;src/main/assembly/wildfly/bin/init.d&lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;*.sh&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;fileMode&gt;0755&lt;/fileMode&gt;\n            &lt;outputDirectory&gt;bin/init.d&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-wildfly-base/cli-scripts/\n            &lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;cli-scripts&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-wildfly-base/hibernate/\n            &lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;modules/system/layers/base/org/hibernate/main\n            &lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-wildfly-base/artemis/\n            &lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;**/*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;modules/system/layers/base/org/apache/activemq/artemis&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-wildfly-base/postgres/\n            &lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;modules/org/postgresql/main&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-wildfly-unionvms/deployments/\n            &lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;standalone/deployments&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/addons/&lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;outputDirectory&gt;standalone/deployments&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n\n        &lt;fileSet&gt;\n            &lt;directory&gt;target/content/uvms-docker-postgres-release/&lt;/directory&gt;\n            &lt;includes&gt;\n                &lt;include&gt;**/*.*&lt;/include&gt;\n            &lt;/includes&gt;\n            &lt;excludes&gt;\n                &lt;exclude&gt;liquibase/*.*&lt;/exclude&gt;\n            &lt;/excludes&gt;\n            &lt;outputDirectory&gt;unionvms-database-scripts&lt;/outputDirectory&gt;\n        &lt;/fileSet&gt;\n    &lt;/fileSets&gt;\n    &lt;files&gt;\n        &lt;file&gt;\n            &lt;source&gt;src/main/wf-scripts/uvms.properties&lt;/source&gt;\n            &lt;outputDirectory&gt;cli-scripts&lt;/outputDirectory&gt;\n            &lt;filtered&gt;true&lt;/filtered&gt;\n        &lt;/file&gt;\n    &lt;/files&gt;\n&lt;/assembly&gt;\n</code></pre> uvms.properties<pre><code>SERVER_CONFIG=standalone-full.xml\n# System properties\nusm_secretkey=\"${unionvms.usm.secret.key}\"\n# Naming\nasset_endpoint=http://localhost:8080/unionvms/asset/rest\nspatial_endpoint=http://localhost:8080/unionvms/spatial\nmovementrules_endpoint=http://localhost:8080/unionvms/movement-rules/rest\nexchange_endpoint=http://localhost:8080/unionvms/exchange/rest\nmovement_endpoint=http://localhost:8080/unionvms/movement/rest\nuser_endpoint=http://localhost:8080/unionvms/user/rest\nincident_endpoint=http://localhost:8080/unionvms/incident/rest\ncors_allowed_host_regex=.*\n# Datasource passwords\ndb_password_audit=${unionvms.database.audit.password}\ndb_password_movement=${unionvms.database.movement.password}\ndb_password_asset=${unionvms.database.asset.password}\ndb_password_exchange=${unionvms.database.exchange.password}\ndb_password_usm=${unionvms.database.usm.password}\ndb_password_spatial=${unionvms.database.spatial.password}\ndb_password_reporting=${unionvms.database.reporting.password}\ndb_password_movementrules=${unionvms.database.movement.rules.password}\ndb_password_incident=${unionvms.database.incident.password}\ndb_password_config=${unionvms.database.config.password}\ndb_password_activity=${unionvms.database.activity.password}\n</code></pre>"},{"location":"installation/manual/#install-and-start","title":"Install and Start","text":"<p>The following commands utilizes the <code>pom.xml</code> file above. There are a number of parameters that can either be set through environment variables or changed directly in <code>pom.xml</code>. The following examples opts for an environment variable approach since that lends itself for automation (think CI).</p> Environment variables<pre><code>tee -a uvms_environment_variables &lt;&lt; 'EOF'\nexport MAVEN_PROFILE_ENVIRONMENT=prod-server\nexport UMVS_VERSION=SET_ME\n\nexport UVMS_USM_SECRET_KEY=SET_ME\n\n# ssh credentials\nexport SERVER_USERNAME=SET_ME\nexport SERVER_PASSWORD=SET_ME\n\n# PostgreSQL (default: postgres/postgres)\nexport DB_USERNAME=SET_ME\nexport DB_PASSWORD=SET_ME\n\n# Wildfly management\nexport WF_MGMT_USERNAME=SET_ME\nexport WF_MGMT_PASSWORD=SET_ME\n\n# username / password for the PostgreSQL schemas\n# Match with what was set in the PostgreSQL setup\nexport ASSET_PASSWORD=SET_ME\nexport AUDIT_PASSWORD=SET_ME\nexport CONFIG_PASSWORD=SET_ME\nexport MOVEMENT_PASSWORD=SET_ME\nexport MOVEMENT_RULES_PASSWORD=SET_ME\nexport EXCHANGE_PASSWORD=SET_ME\nexport REPORTING_PASSWORD=SET_ME\nexport SPATIAL_PASSWORD=SET_ME\nexport USM_PASSWORD=SET_ME\nexport INCIDENT_PASSWORD=SET_ME\nexport ACTIVITY_PASSWORD=SET_ME\nEOF\n\nsource uvms_environment_variables\n</code></pre> Stop old instance and install<pre><code>mvn verify \\\n    -Pscp-stop-and-install-server,$MAVEN_PROFILE_ENVIRONMENT \\\n    -Dunionvms.docker.version=$UMVS_VERSION \\\n    -Dscp.target.server.username=$SERVER_USERNAME \\\n    -Dscp.target.server.password=$SERVER_PASSWORD \\\n    -Dunionvms.database.username=$DB_USERNAME \\\n    -Dunionvms.database.password=$DB_PASSWORD \\\n    -Dunionvms.database.asset.password=$ASSET_PASSWORD \\\n    -Dunionvms.database.audit.password=$AUDIT_PASSWORD \\\n    -Dunionvms.database.config.password=$CONFIG_PASSWORD \\\n    -Dunionvms.database.movement.password=$MOVEMENT_PASSWORD \\\n    -Dunionvms.database.movement.rules.password=$MOVEMENT_RULES_PASSWORD \\\n    -Dunionvms.database.exchange.password=$EXCHANGE_PASSWORD \\\n    -Dunionvms.database.reporting.password=$REPORTING_PASSWORD \\\n    -Dunionvms.database.spatial.password=$SPATIAL_PASSWORD \\\n    -Dunionvms.database.usm.password=$USM_PASSWORD \\\n    -Dunionvms.database.incident.password=$INCIDENT_PASSWORD \\\n    -Dunionvms.database.activity.password=$ACTIVITY_PASSWORD \\\n    -Dwildfly.mgmt.console.username=$WF_MGMT_USERNAME \\\n    -Dwildfly.mgmt.console.password=$WF_MGMT_PASSWORD \\\n    -Dunionvms.usm.secret.key=$UVMS_USM_SECRET_KEY \\\n    -U\n</code></pre> Update/Create database schema with Liquibase<pre><code>mvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/asset/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=asset \\\n    -Dliquibase.username=asset \\\n    -Dliquibase.password=$ASSET_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/audit/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=audit \\\n    -Dliquibase.username=audit \\\n    -Dliquibase.password=$AUDIT_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/config/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=config \\\n    -Dliquibase.username=config \\\n    -Dliquibase.password=$CONFIG_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/movement/liquibase/changelog/db-changelog-master-postgres.xml \\\n    -Dliquibase.defaultSchemaName=movement \\\n    -Dliquibase.username=movement \\\n    -Dliquibase.password=$MOVEMENT_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/movement-rules/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=movementrules \\\n    -Dliquibase.username=movementrules \\\n    -Dliquibase.password=$MOVEMENT_RULES_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/exchange/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=exchange \\\n    -Dliquibase.username=exchange \\\n    -Dliquibase.password=$EXCHANGE_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/reporting/reporting-liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=reporting \\\n    -Dliquibase.username=reporting \\\n    -Dliquibase.password=$REPORTING_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/spatial/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=spatial \\\n    -Dliquibase.username=spatial \\\n    -Dliquibase.password=$SPATIAL_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/user/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=usm \\\n    -Dliquibase.username=usm \\\n    -Dliquibase.password=$USM_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/incident/liquibase/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=incident \\\n    -Dliquibase.username=incident \\\n    -Dliquibase.password=$INCIDENT_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n\nmvn liquibase:update \\\n    -Dliquibase.changeLogFile=target/liquibase/activity/liquibase/postgres/changelog/db-changelog-master.xml \\\n    -Dliquibase.defaultSchemaName=activity \\\n    -Dliquibase.username=activity \\\n    -Dliquibase.password=$ACTIVITY_PASSWORD \\\n    -P$MAVEN_PROFILE_ENVIRONMENT\n</code></pre> Start wildfly<pre><code>mvn clean install -Pscp-start-server,$MAVEN_PROFILE_ENVIRONMENT -Dscp.target.server.username=$SERVER_USERNAME -Dscp.target.server.password=$SERVER_PASSWORD -U\n</code></pre>"}]}